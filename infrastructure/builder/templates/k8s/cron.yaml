apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: ${projectName}-${lowercase(procName)}
  labels:
    app.kubernetes.io/name: ${projectName}
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/component: ${serviceName}-${procName}
    app.kubernetes.io/part-of: taskcluster
    app.kubernetes.io/managed-by: helm
spec:
  schedule: ${schedule}
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: ${projectName}
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app.kubernetes.io/component: ${serviceName}-${procName}
        app.kubernetes.io/part-of: taskcluster
        app.kubernetes.io/managed-by: helm
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: ${projectName}
            app.kubernetes.io/instance: '{{ .Release.Name }}'
            app.kubernetes.io/component: ${serviceName}-${procName}
            app.kubernetes.io/part-of: taskcluster
            app.kubernetes.io/managed-by: helm
        spec:
          restartPolicy: OnFailure
          activeDeadlineSeconds: {$eval: 'deadlineSeconds'}
          containers:
          - name: ${projectName}-${lowercase(procName)}
            image: '{{ .Values.dockerImage }}'
            imagePullPolicy: Always
            args: ['${serviceName}/${procName}']
            resources:
              # TODO: Make configurable
              requests:
                cpu: 100m
                memory: 100Mi
            env:
              $flatten:
                - name: TASKCLUSTER_ROOT_URL
                  value: '{{ .Values.rootUrl }}'
            envFrom:
              - secretRef:
                  name: ${projectName}
