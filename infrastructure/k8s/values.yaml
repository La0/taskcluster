auth:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    purgeExpiredClients:
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/auth
  level: notice
  node_env: production
  force_ssl: false
  trust_proxy: true
  static_clients:
    - clientId: static/taskcluster/built-in-workers
      description: 'Autogenerated, do not edit. Client for built-in-workers'
      scopes:
        - 'queue:claim-work:built-in/*'
        - 'assume:worker-id:built-in/*'
        - 'queue:worker-id:built-in/*'
        - 'queue:resolve-task'
      accessToken: ...
    - clientId: static/taskcluster/github
      description: 'Autogenerated, do not edit. Client for github'
      scopes:
        - 'assume:repo:github.com/*'
        - 'assume:scheduler-id:taskcluster-github/*'
        - 'auth:azure-table-access:{{ .Values.azureAccountId }}/TaskclusterGithubBuilds'
        - 'auth:azure-table-access:{{ .Values.azureAccountId }}/TaskclusterIntegrationOwners'
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/TaskclusterGithubBuilds'
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/TaskclusterIntegrationOwners'
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/TaskclusterChecksToTasks'
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/TaskclusterCheckRuns'
      accessToken: ...
    - clientId: static/taskcluster/hooks
      description: 'Autogenerated, do not edit. Client for hooks'
      scopes:
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/Hooks'
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/Queue'
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/LastFire2'
        - 'assume:hook-id:*'
        - 'notify:email:*'
        - 'queue:create-task:*'
      accessToken: ...
    - clientId: static/taskcluster/index
      description: 'Autogenerated, do not edit. Client for index'
      scopes:
        - 'auth:azure-table-access:{{ .Values.azureAccountId }}/IndexedTasks'
        - 'auth:azure-table-access:{{ .Values.azureAccountId }}/Namespaces'
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/IndexedTasks'
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/Namespaces'
        - 'queue:get-artifact:*'
      accessToken: ...
    - clientId: static/taskcluster/notify
      description: 'Autogenerated, do not edit. Client for notify'
      scopes:
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/DenylistedNotification'
      accessToken: ...
    - clientId: static/taskcluster/purge-cache
      description: 'Autogenerated, do not edit. Client for purge-cache'
      scopes:
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/CachePurges'
      accessToken: ...
    - clientId: static/taskcluster/queue
      description: 'Autogenerated, do not edit. Client for queue'
      scopes:
        - '*'
      accessToken: ...
    - clientId: static/taskcluster/secrets
      description: 'Autogenerated, do not edit. Client for secrets'
      scopes:
        - 'auth:azure-table-access:{{ .Values.azureAccountId }}/Secrets'
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/Secrets'
      accessToken: ...
    - clientId: static/taskcluster/web-server
      description: 'Autogenerated, do not edit. Client for web-server'
      scopes:
        - 'assume:mozilla-group:*'
        - 'assume:mozilla-user:*'
        - 'assume:mozillians-group:*'
        - 'assume:mozillians-user:*'
        - 'auth:create-client:mozilla-auth0/*'
        - 'auth:delete-client:mozilla-auth0/*'
        - 'auth:disable-client:mozilla-auth0/*'
        - 'auth:enable-client:mozilla-auth0/*'
        - 'auth:reset-access-token:mozilla-auth0/*'
        - 'auth:update-client:mozilla-auth0/*'
        - 'auth:create-client:github/*'
        - 'auth:delete-client:github/*'
        - 'auth:disable-client:github/*'
        - 'auth:enable-client:github/*'
        - 'auth:reset-access-token:github/*'
        - 'auth:update-client:github/*'
        - 'assume:login-identity:*'
      accessToken: ...
    - clientId: static/taskcluster/worker-manager
      description: 'Autogenerated, do not edit. Client for worker-manager'
      scopes:
        - 'auth:create-client:worker/*'
        - 'assume:worker-type:worker-manager/*'
        - 'assume:worker-id:*'
        - 'auth:azure-table:read-write:{{ .Values.azureAccountId }}/WM*'
        - 'notify:email:*'
        - 'secrets:get:worker-type:*'
        - 'queue:claim-work:worker-manager/*'
        - 'queue:worker-id:*'
      accessToken: ...
    - clientId: static/taskcluster/root
      description: 'Autogenerated, do not edit. Client for administering the deployment.'
      scopes:
        - '*'
      accessToken: ...
built_in_workers:
  procs:
    server:
      replicas: 1
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/built-in-workers
  level: notice
github:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    worker:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    sync:
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/github
  level: notice
  force_ssl: false
  trust_proxy: true
hooks:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    scheduler:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    listeners:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    expires:
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/hooks
  level: notice
  node_env: production
  force_ssl: false
  trust_proxy: true
index:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    handlers:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    expire:
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/index
  level: notice
  force_ssl: false
  trust_proxy: true
login:
  procs: {}
  taskcluster_client_id: static/taskcluster/login
  level: notice
  force_ssl: false
  node_env: production
  trust_proxy: true
notify:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    irc:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    handler:
      replicas: 1
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/notify
  level: notice
  node_env: production
  force_ssl: false
  trust_proxy: true
purge_cache:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    expireCachePurges:
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/purge-cache
  level: notice
  force_ssl: false
  trust_proxy: true
queue:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    claimResolver:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    deadlineResolver:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    dependencyResolver:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    expireArtifacts:
      cpu: 50m
      memory: 100Mi
    expireTask:
      cpu: 50m
      memory: 100Mi
    expireTaskGroups:
      cpu: 50m
      memory: 100Mi
    expireTaskGroupMembers:
      cpu: 50m
      memory: 100Mi
    expireTaskGroupSizes:
      cpu: 50m
      memory: 100Mi
    expireTaskDependency:
      cpu: 50m
      memory: 100Mi
    expireTaskRequirement:
      cpu: 50m
      memory: 100Mi
    expireQueues:
      cpu: 50m
      memory: 100Mi
    expireWorkerInfo:
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/queue
  level: notice
  node_env: production
  force_ssl: false
secrets:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    expire:
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/secrets
  level: notice
  force_ssl: false
treeherder:
  procs: {}
  taskcluster_client_id: static/taskcluster/treeherder
  level: notice
web_server:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    scanner:
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/web-server
  level: notice
worker_manager:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    provisioner:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    workerscanner:
      replicas: 1
      cpu: 50m
      memory: 100Mi
    expire_workers:
      cpu: 50m
      memory: 100Mi
    expire_worker_pools:
      cpu: 50m
      memory: 100Mi
    expire_errors:
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/worker-manager
  level: notice
  node_env: production
  force_ssl: false
  trust_proxy: true
ui:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/ui
references:
  procs:
    web:
      replicas: 1
      cpu: 50m
      memory: 100Mi
  taskcluster_client_id: static/taskcluster/references
dockerImage: taskcluster/taskcluster:v14.2.0
